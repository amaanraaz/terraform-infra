pipeline {
    agent any

    parameters {
        choice(
            name: 'operation',
            choices: ['terraform apply', 'terraform destroy'],
            description: 'Infra provisioning or destroying'
        )
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/amaanraaz/terraform-infra.git'
            }
        }

        stage('Run GitLeaks') {
            steps {
                script {
                    sh 'gitleaks detect --source=. --report-format=json --report-path=gitleaks_report.json' 
                }
            }
        }

        stage('Terraform Lint') {
            steps {
                script {
                    sh 'tflint --version'
                    sh 'tflint --module --debug'
                }
            }
        }

        stage('Terraform Init') {
            when {
             expression { params.operation == 'terraform apply' }
            }
            steps {
                sh 'terraform init'
            }
        }
        stage('Terraform Format') {

            when {
             expression { params.operation == 'terraform apply' }
            }

            steps {
                sh 'terraform fmt'
            }
        }
        stage('Terraform Validate') {

            when {
             expression { params.operation == 'terraform apply' }
            }

            steps {
                sh 'terraform validate'
            }
        }
        stage('Terraform Plan') {

            when {
             expression { params.operation == 'terraform apply' }
            }

           steps {
                sh 'terraform plan'
            }
        }
        stage('Terraform Apply') {
            when {
             expression { params.operation == 'terraform apply' }
            }
            steps {
                input 'Do you want to run terraform apply ?'
                sh 'terraform apply -auto-approve'
            }
            post {
                success {
                    echo 'Terraform Apply was successful. Triggering next job.'
                    build job: 'Install-Nginx', wait: false
                }
            }
        }
        stage('Terraform Destroy') {
            when {
             expression { params.operation == 'terraform destroy' }
            }
            steps {
                sh 'terraform destroy -auto-approve'
            }
        }
    }
}
